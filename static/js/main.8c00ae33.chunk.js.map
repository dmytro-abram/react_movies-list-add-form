{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","newMovie","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","props","addMovie","this","onSubmit","placeholder","onChange","cols","type","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"6wEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,kBCvBGK,EAAb,4MACEC,MAAQ,CACNC,SAAU,CACRjB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,KAPd,EAWEI,aAAe,SAACC,GACd,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,EAAKC,UAAS,SAAAP,GAAK,MACjB,CACEC,SAAS,2BACJD,EAAMC,UADH,kBAELI,EAAOC,SAlBlB,EAwBEE,aAAe,SAACL,GACdA,EAAMM,iBACN,EAAKC,MAAMC,SAAS,EAAKX,MAAMC,WA1BnC,4CA6BE,WAAU,IAAD,OACP,EAAwDW,KAAKZ,MAAMC,SAA3DjB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,YAAaC,EAA5B,EAA4BA,OAAQC,EAApC,EAAoCA,QAASW,EAA7C,EAA6CA,OAE7C,OACE,0BACEe,SAAU,SAAAV,GAAK,OAAI,EAAKK,aAAaL,KAErC,6BACE,2BACEW,YAAY,cACZT,KAAK,QACLC,MAAOtB,EACP+B,SAAUH,KAAKV,gBAInB,6BACE,8BACEY,YAAY,oBACZE,KAAK,KACLX,KAAK,cACLC,MAAOrB,EACP8B,SAAUH,KAAKV,gBAInB,6BACE,2BACEY,YAAY,mBACZT,KAAK,SACLC,MAAOpB,EACP6B,SAAUH,KAAKV,gBAInB,6BACE,2BACEY,YAAY,mBACZT,KAAK,UACLC,MAAOnB,EACP4B,SAAUH,KAAKV,gBAInB,6BACE,2BACEY,YAAY,gBACZT,KAAK,SACLC,MAAOR,EACPiB,SAAUH,KAAKV,gBAInB,6BACE,4BACEe,KAAK,UADP,mBAnFV,GAA8BC,a,OCGjBC,EAAb,4MACEnB,MAAQ,CACNN,OAAQ0B,GAFZ,EAKET,SAAW,SAACV,GACV,EAAKM,UAAS,SAAAP,GAAK,MAAK,CACtBN,OAAO,GAAD,mBAAMM,EAAMN,QAAZ,CAAoBO,SAPhC,4CAWE,WACE,IAAQP,EAAWkB,KAAKZ,MAAhBN,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAUuB,SAAUC,KAAKD,iBApBnC,GAAyBO,aCDzBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8c00ae33.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    newMovie: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState(state => (\n      {\n        newMovie: {\n          ...state.newMovie,\n          [name]: value,\n        },\n      }\n    ));\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.addMovie(this.state.newMovie);\n  }\n\n  render() {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state.newMovie;\n\n    return (\n      <form\n        onSubmit={event => this.handleSubmit(event)}\n      >\n        <div>\n          <input\n            placeholder=\"Movie title\"\n            name=\"title\"\n            value={title}\n            onChange={this.handleChange}\n          />\n        </div>\n\n        <div>\n          <textarea\n            placeholder=\"Movie description\"\n            cols=\"23\"\n            name=\"description\"\n            value={description}\n            onChange={this.handleChange}\n          />\n        </div>\n\n        <div>\n          <input\n            placeholder=\"Movie image link\"\n            name=\"imgUrl\"\n            value={imgUrl}\n            onChange={this.handleChange}\n          />\n        </div>\n\n        <div>\n          <input\n            placeholder=\"Movie imabd link\"\n            name=\"imdbUrl\"\n            value={imdbUrl}\n            onChange={this.handleChange}\n          />\n        </div>\n\n        <div>\n          <input\n            placeholder=\"Movie imdb id\"\n            name=\"imdbId\"\n            value={imdbId}\n            onChange={this.handleChange}\n          />\n        </div>\n\n        <div>\n          <button\n            type=\"submit\"\n          >\n            Add movie\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (newMovie) => {\n    this.setState(state => ({\n      movies: [...state.movies, newMovie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}